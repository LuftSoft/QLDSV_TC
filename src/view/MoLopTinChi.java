/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.JTable;
import main.Main;

/**
 *
 * @author LENOVO
 */
public class MoLopTinChi extends javax.swing.JFrame {

    /**
     * Creates new form MoLopTinChi
     */
    DefaultTableModel defaultTableModel = new DefaultTableModel();
    int rt = 0;
    String btn = "";

    public MoLopTinChi() {
        initComponents();
        this.loadLopTinChi();
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
       // makhoa.setText(Main.khoa);
       loadDsKhoa();

    }
     public void loadDsKhoa() {
        dsmakhoa.removeAllItems();
        
        if (Main.role.equals("KHOA")) {
            dsmakhoa.addItem(Main.khoa);
        } else {
            try {
                PreparedStatement pr = Main.kn.prepareStatement("SELECT MAKHOA FROM KHOA");
                ResultSet rs = pr.executeQuery();
                while (rs.next()) {
                    dsmakhoa.addItem(rs.getString(1));
                }
            } catch (Exception s) {
                s.printStackTrace();
            }
        }
    }
    public void loadLopTinChi() {
        defaultTableModel.setNumRows(0);
        defaultTableModel.setColumnCount(0);
        table.setEditingColumn(0);
        table.setEditingRow(0);
        defaultTableModel.addColumn("MÃ LỚP TÍN CHỈ");
        defaultTableModel.addColumn("NIÊN KHÓA");
        defaultTableModel.addColumn("HỌC KỲ");
        defaultTableModel.addColumn("MÃ MÔN HỌC");
        defaultTableModel.addColumn("NHÓM");
        defaultTableModel.addColumn("MÃ GIÁO VIÊN");
        defaultTableModel.addColumn("MÃ KHOA");
        defaultTableModel.addColumn("SỐ SV TỐI THIỂU");
        defaultTableModel.addColumn("HỦY LỚP");

        Vector vt;
        try {
            PreparedStatement pre = Main.kn.prepareStatement("select *from LOPTINCHI");
            ResultSet re = pre.executeQuery();
            while (re.next()) {
                vt = new Vector();
                vt.add(re.getString(1));

                vt.add(re.getString(2));
                vt.add(re.getString(3));
                vt.add(re.getString(4));
                vt.add(re.getString(5));
                vt.add(re.getString(6));
                vt.add(re.getString(7));
                vt.add(re.getString(8));
                vt.add(re.getString(9));
                defaultTableModel.addRow(vt);
            }
            table.setModel(defaultTableModel);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    public void loadDsMonHoc() {
        try {
            dsMonHoc.removeAllItems();
            PreparedStatement pr = Main.kn.prepareStatement("SELECT TENMH FROM MONHOC");
            ResultSet rs = pr.executeQuery();
            while (rs.next()) {
                dsMonHoc.addItem(rs.getString(1));

            }
        } catch (SQLException s) {
            s.printStackTrace();
        }
    }

    public void loadDsGiangVien() {
        dsGiangVien.removeAllItems();
        try {
            PreparedStatement pr = Main.kn.prepareStatement("SELECT MAGV FROM GIANGVIEN");
            ResultSet rs = pr.executeQuery();
            while (rs.next()) {
                dsGiangVien.addItem(rs.getString(1));
            }
        } catch (SQLException s) {
            s.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        hocki = new javax.swing.JTextField();
        ssvtt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nienkhoa = new javax.swing.JTextField();
        nhom = new javax.swing.JTextField();
        mamonhoc = new javax.swing.JTextField();
        dsMonHoc = new javax.swing.JComboBox<>();
        dsGiangVien = new javax.swing.JComboBox<>();
        huylop = new javax.swing.JCheckBox();
        dsmakhoa = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        thembtn = new javax.swing.JButton();
        luubtn = new javax.swing.JButton();
        xoabtn = new javax.swing.JButton();
        suabtn = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lớp tín chỉ", "Niên khóa", "Học kì", "Mã môn học", "Nhóm", "Mã giáo viên", "Mã khoa", "Số SV tối thiểu", "Hủy lớp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setText("Mã khoa");

        jLabel2.setText("Học kì");

        jLabel3.setText("Tên môn học");

        jLabel4.setText("MAGV");

        jLabel5.setText("Số sinh viên tối thiểu");

        hocki.setEditable(false);
        hocki.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hockiKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hockiKeyTyped(evt);
            }
        });

        ssvtt.setEditable(false);
        ssvtt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ssvttKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ssvttKeyTyped(evt);
            }
        });

        jLabel6.setText("Nhóm");

        jLabel7.setText("Niên khóa");

        jLabel8.setText("Mã môn học");

        jLabel10.setText("Hủy lớp");

        nienkhoa.setEditable(false);

        nhom.setEditable(false);
        nhom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nhomKeyTyped(evt);
            }
        });

        mamonhoc.setEditable(false);

        dsMonHoc.setEnabled(false);
        dsMonHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dsMonHocItemStateChanged(evt);
            }
        });

        dsGiangVien.setEnabled(false);
        dsGiangVien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dsGiangVienItemStateChanged(evt);
            }
        });

        huylop.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hocki, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(ssvtt, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(dsMonHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dsGiangVien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dsmakhoa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel10))
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nienkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nhom, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mamonhoc, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(huylop, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(nienkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dsmakhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hocki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(nhom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(mamonhoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dsMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dsGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ssvtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(huylop))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel11.setText("LỚP TÍN CHỈ");

        thembtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        thembtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        thembtn.setText("THÊM");
        thembtn.setPreferredSize(new java.awt.Dimension(150, 40));
        thembtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thembtnActionPerformed(evt);
            }
        });

        luubtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        luubtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/floppy-disk.png"))); // NOI18N
        luubtn.setText("LƯU");
        luubtn.setEnabled(false);
        luubtn.setPreferredSize(new java.awt.Dimension(150, 40));
        luubtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luubtnActionPerformed(evt);
            }
        });

        xoabtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        xoabtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        xoabtn.setText("XÓA");
        xoabtn.setPreferredSize(new java.awt.Dimension(150, 40));
        xoabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoabtnActionPerformed(evt);
            }
        });

        suabtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        suabtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        suabtn.setText("SỬA");
        suabtn.setEnabled(false);
        suabtn.setPreferredSize(new java.awt.Dimension(150, 40));
        suabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suabtnActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home.png"))); // NOI18N
        jButton8.setText("TRANG CHỦ");
        jButton8.setPreferredSize(new java.awt.Dimension(150, 40));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jLabel11)
                .addGap(46, 493, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(thembtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(luubtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(xoabtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(suabtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thembtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(luubtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xoabtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suabtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public int validateLTC() {
//        if (dsmakhoa.getText().equals("")) {
//            JOptionPane.showMessageDialog(this, "Không để trống mã khoa");
//            return 0;
//        } else
         if (hocki.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống học kì");
            return 0;
        } else if (ssvtt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống số sinh viên tối thiểu");
            return 0;
        } else if (nienkhoa.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống niên khóa");
            return 0;
        } else if (nhom.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để trống nhom");
            return 0;
        }
        return 1;
    }

    private void clearall() {
        hocki.setText("");
        this.loadDsMonHoc();
        this.loadDsGiangVien();
        ssvtt.setText("");
        nienkhoa.setText("");
        nhom.setText("");
        huylop.isSelected();

    }
    private void thembtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thembtnActionPerformed
        // TODO add your handling code here:
        btn = "them";
        this.clearall();
        this.loadDsMonHoc();
        this.loadDsGiangVien();
        suabtn.setEnabled(false);
        xoabtn.setEnabled(false);
        luubtn.setEnabled(true);
        hocki.setEditable(true);

        dsMonHoc.setEnabled(true);
        dsGiangVien.setEnabled(true);
        ssvtt.setEditable(true);
        nienkhoa.setEditable(true);
        nhom.setEditable(true);
        huylop.setEnabled(true);

    }//GEN-LAST:event_thembtnActionPerformed

    private void ssvttKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssvttKeyPressed

    }//GEN-LAST:event_ssvttKeyPressed

    private void ssvttKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssvttKeyTyped
        // TODO add your handling code here:
        // TODO add your handling code here:
        this.kiemTraSoNhapVaoVaKhac0(evt);
    }//GEN-LAST:event_ssvttKeyTyped

    private void luubtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luubtnActionPerformed
        // TODO add your handling code here:

//        if (this.validateLTC() == 0) {
//            return;
//        } else { // kiem tra trung khoa unique
//            this.loadDsMonHoc();
//            String nienKhoa = nienkhoa.getText();
//            String hocKi = hocki.getText();
//            String maMonHoc = mamonhoc.getText();
//            String nhomm = nhom.getText();
//            PreparedStatement pr;
//             System.out.println("btn" + btn);
//            try {
//                if (btn.equals("them")) {
//                   
//                    pr = Main.kn.prepareStatement("SELECT * FROM LOPTINCHI WHERE NIENKHOA = '" + nienKhoa + "' AND HOCKY = '" + hocKi + "' AND MAMH= '" + maMonHoc + "' AND NHOM = '" + nhomm + "' ");
//                    ResultSet rs = pr.executeQuery();
//                    if (rs.next() != false) {
//                        System.out.println("mo");
//                        JOptionPane.showMessageDialog(this, "lớp tín chỉ này đã được mở");
//                       
//                    }
//                    else {
//                    System.out.println("them");
//                    pr = Main.kn.prepareStatement("INSERT INTO LOPTINCHI(NIENKHOA, HOCKY ,MAMH, NHOM, MAGV, MAKHOA, SOSVTOITHIEU, HUYLOP) VALUES(?,?,?,?,?,?,?,?)");
//                    pr.setString(1, nienKhoa);
//                    pr.setString(2, hocKi);
//                    pr.setString(3, maMonHoc);
//                    pr.setString(4, nhomm);
//                    pr.setString(5, Main.user);
//                    pr.setString(6, Main.khoa);
//                    pr.setString(7, ssvtt.getText());
//                    pr.setBoolean(8, huylop.isSelected());
//                    pr.execute();
//                    JOptionPane.showMessageDialog(this, "Thêm lớp tín chỉ thành công");
//                    this.loadLopTinChi();
//                    }
//                } else if (btn.equals("sua")) {
//
//                    String maltc = String.valueOf(table.getValueAt(rt, 0));
//                    System.out.println("sua");
//
//                    pr = Main.kn.prepareStatement("UPDATE LOPTINCHI SET HOCKY='" + hocki.getText() + "' ,MAMH='" + mamonhoc.getText() + "', NHOM = '" + nhom.getText() + "', MAGV = '" + dsGiangVien.getSelectedItem() + "', NIENKHOA='" + nienkhoa.getText() + "', SOSVTOITHIEU = '" + ssvtt.getText() + "', HUYLOP = '" + huylop.isSelected() + "' WHERE MALTC = '" + maltc + "'");
//                    pr.execute();
//                    JOptionPane.showMessageDialog(this, "Sửa lớp tín chỉ thành công");
//                }
//                this.loadLopTinChi();
//                btn = "";
//                thembtn.setEnabled(true);
//                xoabtn.setEnabled(true);
//                suabtn.setEnabled(false);
//                luubtn.setEnabled(false);
//                this.clearall();
//
//            } catch (SQLException s) {
//                s.printStackTrace();
//            }
//        }
            if (this.validateLTC() == 0) {
            return;
        } else { // kiem tra trung khoa unique
            this.loadDsMonHoc();
            String nienKhoa = nienkhoa.getText();
            String hocKi = hocki.getText();
            String maMonHoc = mamonhoc.getText();
            String nhomm = nhom.getText();
            PreparedStatement pr;
            System.out.println("btn" + btn);
            try {
                if (btn.equals("them")) {
                    
                    pr = Main.kn.prepareStatement("SELECT * FROM LOPTINCHI WHERE NIENKHOA = '" + nienKhoa + "' AND HOCKY = '" + hocKi + "' AND MAMH= '" + maMonHoc + "' AND NHOM = '" + nhomm + "' ");
                    ResultSet rs = pr.executeQuery();
                    if (rs.next() != false) {
                        System.out.println("mo");
                        JOptionPane.showMessageDialog(this, "lớp tín chỉ này đã được mở");
                        
                    } else {
                        System.out.println("them");
                        pr = Main.kn.prepareStatement("INSERT INTO LOPTINCHI(NIENKHOA, HOCKY ,MAMH, NHOM, MAGV, MAKHOA, SOSVTOITHIEU, HUYLOP) VALUES(?,?,?,?,?,?,?,?)");
                        pr.setString(1, nienKhoa);
                        pr.setString(2, hocKi);
                        pr.setString(3, maMonHoc);
                        pr.setString(4, nhomm);
                        pr.setString(5, dsGiangVien.getSelectedItem().toString());
                        pr.setString(6, dsmakhoa.getSelectedItem().toString());
                        pr.setString(7, ssvtt.getText());
                        pr.setBoolean(8, huylop.isSelected());
                        pr.execute();
                        JOptionPane.showMessageDialog(this, "Thêm lớp tín chỉ thành công");
                        this.loadLopTinChi();
                    }
                } else if (btn.equals("sua")) {
                    
                    String maltc = String.valueOf(table.getValueAt(rt, 0));
                    System.out.println("sua");
                    
                    pr = Main.kn.prepareStatement("UPDATE LOPTINCHI SET HOCKY='" + hocki.getText() + "' ,MAMH='" + mamonhoc.getText() + "', NHOM = '" + nhom.getText() + "', MAGV = '" + dsGiangVien.getSelectedItem() + "', NIENKHOA='" + nienkhoa.getText() + "', SOSVTOITHIEU = '" + ssvtt.getText() + "', MAKHOA = '" + dsmakhoa.getSelectedItem().toString() + "', HUYLOP = '" + huylop.isSelected() + "' WHERE MALTC = '" + maltc + "'");
                    pr.execute();
                    JOptionPane.showMessageDialog(this, "Sửa lớp tín chỉ thành công");
                }
                this.loadLopTinChi();
                btn = "";
                thembtn.setEnabled(true);
                xoabtn.setEnabled(true);
                suabtn.setEnabled(false);
                luubtn.setEnabled(false);
                this.clearall();
                
            } catch (SQLException s) {
                s.printStackTrace();
            }
        }
    }//GEN-LAST:event_luubtnActionPerformed
    public void kiemTraSoNhapVaoVaKhac0(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
            return;

        } else if (c == '0') {
            evt.consume();
            return;
        }
    }

    private void hockiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hockiKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_hockiKeyPressed

    private void hockiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hockiKeyTyped
        // TODO add your handling code here:
        this.kiemTraSoNhapVaoVaKhac0(evt);
    }//GEN-LAST:event_hockiKeyTyped

    private void nhomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nhomKeyTyped
        // TODO add your handling code here:
        this.kiemTraSoNhapVaoVaKhac0(evt);
    }//GEN-LAST:event_nhomKeyTyped

    private void dsMonHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dsMonHocItemStateChanged
        // TODO add your handling code here:
        if (dsMonHoc.getSelectedItem() != null) {
            System.out.println("change");
            String tenMonHoc = dsMonHoc.getSelectedItem().toString();
            System.out.println(tenMonHoc);
            try {
                PreparedStatement pr = Main.kn.prepareStatement("SELECT MAMH FROM MONHOC WHERE TENMH = N'" + tenMonHoc + "'");
                ResultSet rs = pr.executeQuery();
                while (rs.next()) {
                    System.out.println(rs.getString(1));
                    mamonhoc.setText(rs.getString(1));
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_dsMonHocItemStateChanged

    private void dsGiangVienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dsGiangVienItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_dsGiangVienItemStateChanged

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
//        suabtn.setEnabled(true);
//        xoabtn.setEnabled(true);
//        luubtn.setEnabled(false);
//        rt = table.getSelectedRow();
//        String maltc = String.valueOf(table.getValueAt(rt, 0));
//        this.loadDsMonHoc();
//        this.loadDsGiangVien();
//
//        try {
//            PreparedStatement pr = Main.kn.prepareStatement("SELECT HOCKY, MAMH, MAGV, SOSVTOITHIEU, NIENKHOA, NHOM, HUYLOP FROM LOPTINCHI WHERE MALTC = '" + maltc + "'");
//            ResultSet rs = pr.executeQuery();
//            while (rs.next()) {
//                hocki.setText(rs.getString(1));
//                dsMonHoc.setSelectedItem(this.getTenMH(rs.getString(2)));
//                dsGiangVien.setSelectedItem(rs.getString(3));
//                ssvtt.setText(rs.getString(4));
//                nienkhoa.setText(rs.getString(5));
//                nhom.setText(rs.getString(6));
//                mamonhoc.setText(rs.getString(2));
//                huylop.setSelected(rs.getBoolean(7));
//            }
//
//        } catch (SQLException s) {
//            s.printStackTrace();
//        }
 rt = table.getSelectedRow();
        String makhoa = table.getValueAt(rt, 7).toString();
        
        if (Main.role.equals("PGV") || makhoa.equals(Main.khoa)) {
            suabtn.setEnabled(true);
            xoabtn.setEnabled(true);
            luubtn.setEnabled(false);
            rt = table.getSelectedRow();
            String maltc = String.valueOf(table.getValueAt(rt, 0));
            
            this.loadDsMonHoc();
            this.loadDsGiangVien();
            
            try {
                PreparedStatement pr = Main.kn.prepareStatement("SELECT HOCKY, MAMH, MAGV, SOSVTOITHIEU, NIENKHOA, NHOM, HUYLOP, MAKHOA FROM LOPTINCHI WHERE MALTC = '" + maltc + "'");
                ResultSet rs = pr.executeQuery();
                while (rs.next()) {
                    
                    hocki.setText(rs.getString(1));
                    dsMonHoc.setSelectedItem(this.getTenMH(rs.getString(2)));
                    dsGiangVien.setSelectedItem(rs.getString(3));
                    ssvtt.setText(rs.getString(4));
                    nienkhoa.setText(rs.getString(5));
                    nhom.setText(rs.getString(6));
                    mamonhoc.setText(rs.getString(2));
                    huylop.setSelected(rs.getBoolean(7));
                    dsmakhoa.setSelectedItem(rs.getString(8));
                    
                }
                
            } catch (SQLException s) {
                s.printStackTrace();
            }

        }
    }//GEN-LAST:event_tableMouseClicked
    public String getTenMH(String maMH) {
        try {
            PreparedStatement pr = Main.kn.prepareStatement("SELECT TENMH FROM MONHOC WHERE MAMH = '" + maMH + "'");
            ResultSet r = pr.executeQuery();
            while (r.next()) {
                return r.getString(1);
            }
        } catch (SQLException s) {
            s.printStackTrace();
        }
        return "";
    }
    private void xoabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoabtnActionPerformed
        // TODO add your handling code here:
        String maltc = String.valueOf(table.getValueAt(rt, 0));
        try {
            PreparedStatement pr = Main.kn.prepareStatement("SELECT MALTC FROM DANGKY WHERE MALTC = '" + maltc + "' AND HUYDANGKY=0");
            ResultSet rs = pr.executeQuery();
            if (rs.next() != false) {
                System.out.println("có");
                JOptionPane.showMessageDialog(this, "Lớp tín chỉ này đã có sinh viên đăng kí nên không xóa được");
            } else {
                pr = Main.kn.prepareStatement("DELETE FROM LOPTINCHI WHERE MALTC = '" + maltc + "'");
                pr.executeUpdate();
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                this.loadLopTinChi();

            }

        } catch (SQLException s) {
            s.printStackTrace();
        }
    }//GEN-LAST:event_xoabtnActionPerformed

    private void suabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suabtnActionPerformed
        // TODO add your handling code here:
//        btn = "sua";
//
//        luubtn.setEnabled(true);
//        thembtn.setEnabled(false);
//        xoabtn.setEnabled(false);
//
//        dsMonHoc.setEnabled(true);
//        dsGiangVien.setEnabled(true);
//        ssvtt.setEditable(true);
//        huylop.setEnabled(true);
         btn = "sua";
        dsmakhoa.setEnabled(false);
        luubtn.setEnabled(true);
        thembtn.setEnabled(false);
        xoabtn.setEnabled(false);
        
        dsMonHoc.setEnabled(true);
        dsGiangVien.setEnabled(true);
        ssvtt.setEditable(true);
        huylop.setEnabled(true);
        

    }//GEN-LAST:event_suabtnActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       this.setVisible(false);
        MainForm f = new MainForm();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
         // Determine the new location of the window
        int w = f.getSize().width;
        int h = f.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        // Move the window
        f.setLocation(x, y);
       f.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoLopTinChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoLopTinChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoLopTinChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoLopTinChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoLopTinChi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dsGiangVien;
    private javax.swing.JComboBox<String> dsMonHoc;
    private javax.swing.JComboBox<String> dsmakhoa;
    private javax.swing.JTextField hocki;
    private javax.swing.JCheckBox huylop;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton luubtn;
    private javax.swing.JTextField mamonhoc;
    private javax.swing.JTextField nhom;
    private javax.swing.JTextField nienkhoa;
    private javax.swing.JTextField ssvtt;
    private javax.swing.JButton suabtn;
    private javax.swing.JTable table;
    private javax.swing.JButton thembtn;
    private javax.swing.JButton xoabtn;
    // End of variables declaration//GEN-END:variables

}
