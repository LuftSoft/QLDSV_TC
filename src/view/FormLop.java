/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import Connection.KetNoiMSSQL;
import java.util.logging.Level;
import java.util.logging.Logger;
import static main.Main.loginName;
import static main.Main.password;

/**
 *
 * @author Admin
 */
public class FormLop extends javax.swing.JFrame {
    private Connection conn = null;
    private String tmp = null;
    /**
     * Creates new form FormLop
     */
    public FormLop() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        // Move the window
        conn = KetNoiMSSQL.getKetNoi(loginName, password);
        this.setLocation(x, y);
        getAllLop();
        resetAll();
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void getAllLop(){
        Statement st = null;
        try {
            st = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ResultSet rs = st.executeQuery("SELECT * FROM LOP");
            DefaultTableModel model = new DefaultTableModel();
            model = (DefaultTableModel) tableLop.getModel();
            while(rs.next()){
                model.addRow(new Object[]{rs.getString("MALOP"),rs.getString("TENLOP"),rs.getString("KHOAHOC"),rs.getString("MAKHOA")});
            }
            if(tableLop.getRowCount()>0){
                tableLop.setRowSelectionInterval(0, 0);
                txtClassID.setText((String) model.getValueAt(0, 0));
                txtClassName.setText((String) model.getValueAt(0, 1));
                txtClassYear.setText((String) model.getValueAt(0, 2));
                txtFaculty.setText((String) model.getValueAt(0, 3));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }
    public void resetAll(){
        Statement st = null;
        try {
            st = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs=null;
        try {
            rs = st.executeQuery("SELECT * FROM LOP");
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        lbWarning.setText("");
        btnGhi.setEnabled(false);
        btnThem.setEnabled(true);
        btnXoa.setEnabled(true);
        btnSua.setEnabled(true);
        txtClassID.setEditable(false);
        txtClassName.setEditable(false);
        txtClassYear.setEditable(false);
        txtFaculty.setEditable(false);
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tableLop.getModel();
        for(int i=tableLop.getRowCount()-1;i>=0;i--){
            model.removeRow(i);
        }
        try {
            while(rs.next()){
                model.addRow(new Object[]{rs.getString("MALOP"),rs.getString("TENLOP"),rs.getString("KHOAHOC"),rs.getString("MAKHOA")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(tableLop.getRowCount()>0){
                tableLop.setRowSelectionInterval(0, 0);
                txtClassID.setText((String) model.getValueAt(0, 0));
                txtClassName.setText((String) model.getValueAt(0, 1));
                txtClassYear.setText((String) model.getValueAt(0, 2));
                txtFaculty.setText((String) model.getValueAt(0, 3));
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLop = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtClassID = new javax.swing.JTextField();
        txtClassName = new javax.swing.JTextField();
        txtClassYear = new javax.swing.JTextField();
        txtFaculty = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lbWarning = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnGhi = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home.png"))); // NOI18N
        jButton1.setText("Trang chủ");
        jButton1.setPreferredSize(new java.awt.Dimension(120, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tableLop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lớp", "Tên lớp", "Khóa học", "Mã khoa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableLop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLopMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLop);

        jLabel1.setText("Mã lớp");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel2.setText("Tên lớp");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel3.setText("Khóa học");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel4.setText("Mã khoa");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 30));

        txtClassID.setEditable(false);
        txtClassID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtClassID.setPreferredSize(new java.awt.Dimension(200, 30));
        txtClassID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassIDActionPerformed(evt);
            }
        });

        txtClassName.setEditable(false);
        txtClassName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtClassName.setPreferredSize(new java.awt.Dimension(200, 30));

        txtClassYear.setEditable(false);
        txtClassYear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtClassYear.setPreferredSize(new java.awt.Dimension(200, 30));

        txtFaculty.setEditable(false);
        txtFaculty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtFaculty.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 255));
        jLabel5.setText("Chi tiết");

        lbWarning.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbWarning.setForeground(new java.awt.Color(255, 0, 0));
        lbWarning.setPreferredSize(new java.awt.Dimension(200, 30));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnThem.setText("THÊM");
        btnThem.setPreferredSize(new java.awt.Dimension(120, 40));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        btnSua.setText("SỬA");
        btnSua.setPreferredSize(new java.awt.Dimension(120, 40));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.setPreferredSize(new java.awt.Dimension(120, 40));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnGhi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/floppy-disk.png"))); // NOI18N
        btnGhi.setText("GHI");
        btnGhi.setPreferredSize(new java.awt.Dimension(120, 40));
        btnGhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhiActionPerformed(evt);
            }
        });

        btnXoa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/remove.png"))); // NOI18N
        btnXoa1.setText("HỦY");
        btnXoa1.setPreferredSize(new java.awt.Dimension(120, 40));
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtClassYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtClassID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 133, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClassID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbWarning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClassYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new MainForm().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtClassIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassIDActionPerformed

    private void tableLopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLopMouseClicked
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tableLop.getModel();
        txtClassID.setText((String) model.getValueAt(tableLop.getSelectedRow(), 0));
        txtClassName.setText((String) model.getValueAt(tableLop.getSelectedRow(), 1));
        txtClassYear.setText((String) model.getValueAt(tableLop.getSelectedRow(), 2));
        txtFaculty.setText((String) model.getValueAt(tableLop.getSelectedRow(), 3));
    }//GEN-LAST:event_tableLopMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        resetAll();
        this.tmp="them";
        txtClassID.setEditable(true);
        txtClassName.setEditable(true);
        txtClassYear.setEditable(true);
        txtFaculty.setEditable(true);
        txtClassID.setText("");
        txtClassName.setText("");
        txtClassYear.setText("");
        txtFaculty.setText("");
        btnGhi.setEnabled(true);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        this.tmp="sua";
        resetAll();
        btnThem.setEnabled(false);
        btnXoa.setEnabled(false);
        btnGhi.setEnabled(true);
        txtClassID.setEditable(false);
        txtFaculty.setEditable(false);
        txtClassName.setEditable(true);
        txtClassYear.setEditable(true);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from SINHVIEN where MALOP='"+txtClassID.getText().trim()+"'");
            if(rs.next()!= false){
                lbWarning.setText("Lop da co sinh vien khong the xoa");
                return;
            }else{
                PreparedStatement ps = conn.prepareStatement("delete from LOP where MALOP='"+txtClassID.getText().trim()+"'");
                try{
                    int i = ps.executeUpdate();
                    resetAll();
                }
                catch(Exception e){
                    lbWarning.setText("khong thanh cong!");
                    System.out.println(e);
                    return;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnGhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhiActionPerformed
        Statement st = null;
        try {
            st = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(this.tmp.equals("them")){
            if(txtClassName.getText().trim().equals("")){
                lbWarning.setText("Tên lớp trống!");
                return;
            }
            if(txtClassYear.getText().trim().equals("")){
                lbWarning.setText("Niên khóa trống");
               return;
           }
            if(txtClassID.getText().trim().equals("")){
                lbWarning.setText("Ma lớp trống!");
                return;
            }
            if(txtFaculty.getText().trim().equals("")){
                    lbWarning.setText("Ma khoa trống!");
                return;
            }
            try {
                PreparedStatement ps = conn.prepareStatement("insert into LOP(MALOP,TENLOP,KHOAHOC,MAKHOA) values(?,?,?,?)");
                ps.setString(1, txtClassID.getText().trim());
                ps.setString(2, txtClassName.getText().trim());
                ps.setString(3, txtClassYear.getText().trim());
                ps.setString(4, txtFaculty.getText().trim());
                try{
                   ResultSet r = ps.executeQuery();
                   resetAll();
                }catch(Exception e ){
                    System.out.println(e);
                    lbWarning.setText("khong thanh cong!!");
                    return;
                }
            } catch (SQLException ex) {
                Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if (this.tmp.equals("sua")){
            try {
                if(txtClassName.getText().trim().equals("")){
                    lbWarning.setText("Tên lớp trống!");
                    return;
                }
                if(txtClassYear.getText().trim().equals("")){
                    lbWarning.setText("Niên khóa trống");
                    return;
                }
                PreparedStatement ps = conn.prepareStatement("UPDATE LOP SET TENLOP='"+txtClassName.getText().trim()+"',KHOAHOC='"+txtClassYear.getText().trim()+"' where MALOP=N'"+txtClassID.getText().trim()+"'");
                try{
                    int i = ps.executeUpdate();
                    resetAll();
                }catch(Exception e){
                    lbWarning.setText("nien khoa hoac ten sai");
                    return;
                }
            } catch (SQLException ex) {
                Logger.getLogger(FormLop.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            return;
        }
        
    }//GEN-LAST:event_btnGhiActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        resetAll();
    }//GEN-LAST:event_btnXoa1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormLop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGhi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbWarning;
    private javax.swing.JTable tableLop;
    private javax.swing.JTextField txtClassID;
    private javax.swing.JTextField txtClassName;
    private javax.swing.JTextField txtClassYear;
    private javax.swing.JTextField txtFaculty;
    // End of variables declaration//GEN-END:variables
}
